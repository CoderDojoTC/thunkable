{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CoderDojo Twin Cities Thunkable Resources \u00b6 This website is for sharing teaching resources for Thunkable. Thunkable is a free drag-and-drop tool used to build mobile applications on both Android and iPhone. The development environment is the Thunkable website, where anyone can sign in with a Google account. Thunkable is replacing AppInventor as our mobile application development tool of choice, because Thunkable allows for the creation of iPhone apps in addition to Android. In addition, Thunkable makes testing and downloading apps much easier. View the basics section to get started.","title":"Home"},{"location":"#coderdojo-twin-cities-thunkable-resources","text":"This website is for sharing teaching resources for Thunkable. Thunkable is a free drag-and-drop tool used to build mobile applications on both Android and iPhone. The development environment is the Thunkable website, where anyone can sign in with a Google account. Thunkable is replacing AppInventor as our mobile application development tool of choice, because Thunkable allows for the creation of iPhone apps in addition to Android. In addition, Thunkable makes testing and downloading apps much easier. View the basics section to get started.","title":"CoderDojo Twin Cities Thunkable Resources"},{"location":"contacts/","text":"CoderDojo Twin Cities Thunkable Contacts \u00b6 Dan McCreary","title":"Contacts"},{"location":"contacts/#coderdojo-twin-cities-thunkable-contacts","text":"Dan McCreary","title":"CoderDojo Twin Cities Thunkable Contacts"},{"location":"contribute/","text":"Contributing to the CoderDojo Twin Cities Thunkable Python Resources \u00b6 We always accept standard git pull requests. If you would like to be a regular contributor we can also grant you direct write-access to this repository. Our Content Authoring Guide will tell you how we author content.","title":"Contribute"},{"location":"contribute/#contributing-to-the-coderdojo-twin-cities-thunkable-python-resources","text":"We always accept standard git pull requests. If you would like to be a regular contributor we can also grant you direct write-access to this repository. Our Content Authoring Guide will tell you how we author content.","title":"Contributing to the CoderDojo Twin Cities Thunkable Python Resources"},{"location":"technovation/","text":"Technovation \u00b6 Technovation has a local \"sister\" project of CoderDojoTC. We share the same parent (CodeSavvy). In the past, Technovation training content was not public. Last year they did make their content public. Here are the links to their coding content: Technovation Coding Lab 1: Choose your App Builder Technovation Coding Lab 2: Algorithms and Pseudocode Technovation Coding Lab 3: Event Handlers Technovation Coding Lab 4: Data and Functions Technovation Coding Lab 5: Variables Technovation Coding Lab 6: Lists Technovation Coding Lab 7: If/Else Conditional Statements Technovation Coding Lab 8: If / Else / Else If Conditionals Technovation Coding Lab 9: Advanced Logic and Conditionals Technovation Coding Lab 10: Loops Technovation Coding Lab 11: Using Sensors and Components in App Inventor and Thunkable Technovation Coding Lab 12: Storing Data Locally Technovation Coding Lab 13: Storing Data in the Cloud and APIs Technovation Coding Lab 14: Debugging Tips in App Inventor and Thunkable Technovation Coding Lab 15: Flowcharts Technovation Coding Lab 14: Debugging Tips in App Inventor and Thunkable Note that the copyright is \u00a9 2020 Technovation. All Rights Reserved. Technovation is a 501c3 nonprofit organization in the United States. They are not a Minnesota company.","title":"Technovation"},{"location":"technovation/#technovation","text":"Technovation has a local \"sister\" project of CoderDojoTC. We share the same parent (CodeSavvy). In the past, Technovation training content was not public. Last year they did make their content public. Here are the links to their coding content: Technovation Coding Lab 1: Choose your App Builder Technovation Coding Lab 2: Algorithms and Pseudocode Technovation Coding Lab 3: Event Handlers Technovation Coding Lab 4: Data and Functions Technovation Coding Lab 5: Variables Technovation Coding Lab 6: Lists Technovation Coding Lab 7: If/Else Conditional Statements Technovation Coding Lab 8: If / Else / Else If Conditionals Technovation Coding Lab 9: Advanced Logic and Conditionals Technovation Coding Lab 10: Loops Technovation Coding Lab 11: Using Sensors and Components in App Inventor and Thunkable Technovation Coding Lab 12: Storing Data Locally Technovation Coding Lab 13: Storing Data in the Cloud and APIs Technovation Coding Lab 14: Debugging Tips in App Inventor and Thunkable Technovation Coding Lab 15: Flowcharts Technovation Coding Lab 14: Debugging Tips in App Inventor and Thunkable Note that the copyright is \u00a9 2020 Technovation. All Rights Reserved. Technovation is a 501c3 nonprofit organization in the United States. They are not a Minnesota company.","title":"Technovation"},{"location":"basics/01-get-started/","text":"Getting Started with Thunkable \u00b6 Thunkable Prerequisites \u00b6 A computer or tablet that can reach the internet A Google account, Apple account, or email address Optional: A device to test applications (phone, tablet, etc) Sign-in \u00b6 Using a computer or tablet, go to the Thunkable website and sign-in with the Google, Apple, or email address account that you would like to use to store your applications. Creating a project \u00b6 On the Thunkable website, if this is your first time signing in, there should be a large banner that says \"Start Building.\" Click this banner, and a pop-up should appear to create a new Project. If you already have a Project, clicking Create New App will open the pop-up to create a new Project. After confirming a name for the Project, the Thunkable Designer page will open. The first time signing in, an overlay will show on the screen with some tutorials. Continuing \u00b6 Click the Next button below to learn about the App Designer, for adding app components to your new Project.","title":"01 - Getting Started"},{"location":"basics/01-get-started/#getting-started-with-thunkable","text":"","title":"Getting Started with Thunkable"},{"location":"basics/01-get-started/#thunkable-prerequisites","text":"A computer or tablet that can reach the internet A Google account, Apple account, or email address Optional: A device to test applications (phone, tablet, etc)","title":"Thunkable Prerequisites"},{"location":"basics/01-get-started/#sign-in","text":"Using a computer or tablet, go to the Thunkable website and sign-in with the Google, Apple, or email address account that you would like to use to store your applications.","title":"Sign-in"},{"location":"basics/01-get-started/#creating-a-project","text":"On the Thunkable website, if this is your first time signing in, there should be a large banner that says \"Start Building.\" Click this banner, and a pop-up should appear to create a new Project. If you already have a Project, clicking Create New App will open the pop-up to create a new Project. After confirming a name for the Project, the Thunkable Designer page will open. The first time signing in, an overlay will show on the screen with some tutorials.","title":"Creating a project"},{"location":"basics/01-get-started/#continuing","text":"Click the Next button below to learn about the App Designer, for adding app components to your new Project.","title":"Continuing"},{"location":"basics/02-app-designer/","text":"Thunkable App Designer \u00b6 When starting a new project, the app Designer page will open. This page is where the app's components are added. The major sections of the page are numbered in this image: The numbered sections are: Screen Viewer - View of the selected app screen, this shows what the screen will look when the app is opened. The App Tree Section - Shows the list of components in the app, they can be reordered to change their location on the screen or change which screen they are on. App Components Section - List of components that can be added to the app. Components can be dragged and dropped from the App Components Section into the Screen Viewer to add them to the app. Component Properties - Contains editable properties for the selected component. Components can be selected in the Screen Viewer or the App Tree Section. Screen Selector. An app can have multiple screens. A new screen can be added with the '+' button. Clicking the name of a screen here opens that screen so components can be dragged into it. Tabs to switch between Designer and Blocks Editors - Clicking on the Blocks tab will open the Blocks Editor, leaving the Designer page. Continuing \u00b6 Click the \"Next\" button below to view information about the Blocks Editor.","title":"02 - App Designer"},{"location":"basics/02-app-designer/#thunkable-app-designer","text":"When starting a new project, the app Designer page will open. This page is where the app's components are added. The major sections of the page are numbered in this image: The numbered sections are: Screen Viewer - View of the selected app screen, this shows what the screen will look when the app is opened. The App Tree Section - Shows the list of components in the app, they can be reordered to change their location on the screen or change which screen they are on. App Components Section - List of components that can be added to the app. Components can be dragged and dropped from the App Components Section into the Screen Viewer to add them to the app. Component Properties - Contains editable properties for the selected component. Components can be selected in the Screen Viewer or the App Tree Section. Screen Selector. An app can have multiple screens. A new screen can be added with the '+' button. Clicking the name of a screen here opens that screen so components can be dragged into it. Tabs to switch between Designer and Blocks Editors - Clicking on the Blocks tab will open the Blocks Editor, leaving the Designer page.","title":"Thunkable App Designer"},{"location":"basics/02-app-designer/#continuing","text":"Click the \"Next\" button below to view information about the Blocks Editor.","title":"Continuing"},{"location":"basics/03-blocks-editor/","text":"Thunkable Blocks Editor \u00b6 The Blocks Editor is where a user can program all the app's functions - the things that happen. The major sections of the page are highlighted here: The numbered sections are: Blocks view - The location for active blocks. All functionality, anything that happens in a given screen must be defined by combining blocks here. Drawer List - List of drawers that contain blocks. The drawers are named based on the type of functionality that their blocks have. drawers at the bottom, without colors next to them, contain functionality for the Components that are in the selected screen. Drawer Blocks - List of blocks in the selected drawer. Blocks can be dragged from the drawer into the blocks view to add their functionality to the screen. The act of dragging blocks into the blocks view and clicking them together is the coding process for making things happen in a Thunkable app. Extra Tools - Drawers can be dropped into the garbage can here to remove them (or clicking \"delete\" when a drawer works similarly). The zoom buttons can be used to change magnification of the view. Screen Selector. Works the same as the Screen Selector in the App Designer screen, allows for viewing Blocks in different screens. Tabs to switch between Designer and Blocks Editors Continuing \u00b6 Click the \"Next\" button below to view information about saving and testing your app.","title":"03 - App Blocks Editor"},{"location":"basics/03-blocks-editor/#thunkable-blocks-editor","text":"The Blocks Editor is where a user can program all the app's functions - the things that happen. The major sections of the page are highlighted here: The numbered sections are: Blocks view - The location for active blocks. All functionality, anything that happens in a given screen must be defined by combining blocks here. Drawer List - List of drawers that contain blocks. The drawers are named based on the type of functionality that their blocks have. drawers at the bottom, without colors next to them, contain functionality for the Components that are in the selected screen. Drawer Blocks - List of blocks in the selected drawer. Blocks can be dragged from the drawer into the blocks view to add their functionality to the screen. The act of dragging blocks into the blocks view and clicking them together is the coding process for making things happen in a Thunkable app. Extra Tools - Drawers can be dropped into the garbage can here to remove them (or clicking \"delete\" when a drawer works similarly). The zoom buttons can be used to change magnification of the view. Screen Selector. Works the same as the Screen Selector in the App Designer screen, allows for viewing Blocks in different screens. Tabs to switch between Designer and Blocks Editors","title":"Thunkable Blocks Editor"},{"location":"basics/03-blocks-editor/#continuing","text":"Click the \"Next\" button below to view information about saving and testing your app.","title":"Continuing"},{"location":"basics/04-testing-saving/","text":"Saving and Testing a Thunkable Project \u00b6 It can be useful to check the functionality of software at various points in the development process, and mobile apps are no exception. Saving an app \u00b6 A project is automatically saved whenever changes are made! In-browser live test \u00b6 An app can be tested in two ways directly in the browser that is being used to create the app: 1. In the app Design page, the preview button in the upper right of the Screen Viewer will turn the Screen Viewer into a live testing screen, which can be clicked and interacted with. 2. On the upper right of the project's page, there is a Live Test button that opens a sample that can be interacted with, similar to option 1. Setting up a device \u00b6 If a user has a mobile device for testing their newly developed applications, they will need to download the Thunkable Live app from the Google Play Store or Apple App Store. Sign into the Thunkable Live app with the same account that was used to create the app at the Thunkable website. After signing in to Thunkable Live, the user should see their app on their device under \"My Projects.\" Clicking on the name of the app will open the app on the device. Any changes to the app on the Thunkable website should be reflected on the mobile device almost immediately.","title":"04 - Testing and Saving an App"},{"location":"basics/04-testing-saving/#saving-and-testing-a-thunkable-project","text":"It can be useful to check the functionality of software at various points in the development process, and mobile apps are no exception.","title":"Saving and Testing a Thunkable Project"},{"location":"basics/04-testing-saving/#saving-an-app","text":"A project is automatically saved whenever changes are made!","title":"Saving an app"},{"location":"basics/04-testing-saving/#in-browser-live-test","text":"An app can be tested in two ways directly in the browser that is being used to create the app: 1. In the app Design page, the preview button in the upper right of the Screen Viewer will turn the Screen Viewer into a live testing screen, which can be clicked and interacted with. 2. On the upper right of the project's page, there is a Live Test button that opens a sample that can be interacted with, similar to option 1.","title":"In-browser live test"},{"location":"basics/04-testing-saving/#setting-up-a-device","text":"If a user has a mobile device for testing their newly developed applications, they will need to download the Thunkable Live app from the Google Play Store or Apple App Store. Sign into the Thunkable Live app with the same account that was used to create the app at the Thunkable website. After signing in to Thunkable Live, the user should see their app on their device under \"My Projects.\" Clicking on the name of the app will open the app on the device. Any changes to the app on the Thunkable website should be reflected on the mobile device almost immediately.","title":"Setting up a device"},{"location":"basics/05-more-resources/","text":"More Resources \u00b6 There are many Thunkable tutorials available. Once a student understands the basics of Thunkable development, they may be interested in developing their own creative vision for an app. More Tutorials \u00b6 For more direction there are many existing tutorials and walkthroughs, including the following resources. Technovation \u00b6 See here. Thunkable \u00b6 Thunkable has aggregated tutorials here, which include in-platform tutorials and a video series. References \u00b6 Thunkable has its own searchable documentation which has information and sometimes videos about different components. For example, here is a page on text-to-speech. The search bar in the upper right is useful for finding information about specific functionality a user is looking for. Examples \u00b6 Sometimes seeing examples can provide inspiration for one's own design. Sample projects \u00b6 Lists of examples can be seen below a user's projects on the projects screen. Game example \u00b6 Flappy ball","title":"05 - More Resources"},{"location":"basics/05-more-resources/#more-resources","text":"There are many Thunkable tutorials available. Once a student understands the basics of Thunkable development, they may be interested in developing their own creative vision for an app.","title":"More Resources"},{"location":"basics/05-more-resources/#more-tutorials","text":"For more direction there are many existing tutorials and walkthroughs, including the following resources.","title":"More Tutorials"},{"location":"basics/05-more-resources/#technovation","text":"See here.","title":"Technovation"},{"location":"basics/05-more-resources/#thunkable","text":"Thunkable has aggregated tutorials here, which include in-platform tutorials and a video series.","title":"Thunkable"},{"location":"basics/05-more-resources/#references","text":"Thunkable has its own searchable documentation which has information and sometimes videos about different components. For example, here is a page on text-to-speech. The search bar in the upper right is useful for finding information about specific functionality a user is looking for.","title":"References"},{"location":"basics/05-more-resources/#examples","text":"Sometimes seeing examples can provide inspiration for one's own design.","title":"Examples"},{"location":"basics/05-more-resources/#sample-projects","text":"Lists of examples can be seen below a user's projects on the projects screen.","title":"Sample projects"},{"location":"basics/05-more-resources/#game-example","text":"Flappy ball","title":"Game example"},{"location":"basics/intro/","text":"Introduction to the CoderDojo Twin Cities Thunkable Resources \u00b6 The development of mobile apps can be a very creative process, and working with a student to develop an application of their choosing can be a great way to learn. The following pages have introductory information about starting to use the Thunkable platform, in addition to resources for more advanced learning.","title":"Introduction"},{"location":"basics/intro/#introduction-to-the-coderdojo-twin-cities-thunkable-resources","text":"The development of mobile apps can be a very creative process, and working with a student to develop an application of their choosing can be a great way to learn. The following pages have introductory information about starting to use the Thunkable platform, in addition to resources for more advanced learning.","title":"Introduction to the CoderDojo Twin Cities Thunkable Resources"}]}